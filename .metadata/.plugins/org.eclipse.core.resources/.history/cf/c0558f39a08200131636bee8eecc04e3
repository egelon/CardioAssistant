package com.egelon.cardioassistant;

import android.os.Bundle;
import android.os.IBinder;
import android.app.Activity;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.content.ServiceConnection;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;

import android.widget.Button;
import android.widget.SeekBar;
import android.widget.SeekBar.OnSeekBarChangeListener;
import android.widget.TextView;

public class MainActivity extends Activity {
	private PedometerBackgroundService pedometerService;
	
	
	//accelerometer values
	private TextView textViewX;
	private TextView textViewY;
	private TextView textViewZ;
	
	//current sensitivity
	private TextView textViewSensitivity;
	
	//steps taken
	private TextView textViewSteps;
	
	//reset pedometer button
	private Button buttonReset;
	
	//exit app button
	private Button buttonExit;
	
	//SeekBar
	private SeekBar seekBar;
	private int threshold;
	private OnSeekBarChangeListener seekBarListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        //attach our TextViews to the corresponding UI elements
        textViewX = (TextView) findViewById(R.id.textViewX);
        textViewY = (TextView) findViewById(R.id.textViewY);
        textViewZ = (TextView) findViewById(R.id.textViewZ);
        
        textViewSensitivity = (TextView) findViewById(R.id.textSensitivity);
        
        textViewSteps = (TextView) findViewById(R.id.stepsTakenCounterLabel);
        
        buttonReset = (Button) findViewById(R.id.buttonReset);
        buttonExit = (Button) findViewById(R.id.buttonExit);
        
        seekBar = (SeekBar) findViewById(R.id.seekBar);
        
        //initialize value for seekBar
        seekBar.setProgress(10);
        seekBar.setOnSeekBarChangeListener(seekBarListener);
        threshold = 10;
        textViewSensitivity.setText(String.valueOf(threshold));
        
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.main, menu);
        return true;
    }
    
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle presses on the action bar items
        switch (item.getItemId()) {
            case R.id.action_settings:
                openSettings();
                return true;
            default:
                return super.onOptionsItemSelected(item);
        }
    }
    
    public void openSettings ()
    {
    	
    }
    
    public void StartPedometerService (View view) 
    {
    	/*
    	 * Creates a new Intent to start the PedometerBackgroundWorker service
    	 * IntentService.
    	 */
    	Intent mServiceIntent = new Intent(this, PedometerBackgroundService.class);
    	//start the service
    	startService(mServiceIntent);
    }
    
    public void resetSteps () 
    {
    	
    }
    
    @Override
    protected void onResume() {
      super.onResume();
      Intent intent= new Intent(this, PedometerBackgroundService.class);
      bindService(intent, mConnection, Context.BIND_AUTO_CREATE);
    }

    @Override
    protected void onPause() {
      super.onPause();
      unbindService(mConnection);
    }
    
    
    //service connection via direct binding through mConnection
    private ServiceConnection mConnection = new ServiceConnection() {
    	@Override
        public void onServiceConnected(ComponentName className, 
            IBinder binder) {
    		PedometerBackgroundService.MyBinder b = (PedometerBackgroundService.MyBinder) binder;
    		pedometerService = b.getService();
          //Toast.makeText(MainActivity.this, "Connected", Toast.LENGTH_SHORT).show();
        }

        public void onServiceDisconnected(ComponentName className) {
        	pedometerService = null;
        }
      };

}
